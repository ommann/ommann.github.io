!function(){"use strict";const e=["client/chunk.6c31995d.js","client/client.01e4c709.js","client/chunk.152a9bd6.js","client/chunk.7116a3f1.js","client/chunk.950c5de0.js","client/chunk.265e0e6e.js"].concat(["/service-worker-index.html","favicon.png","global.css","manifest.json","ommann-logo-192.png","ommann-logo-512.png"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1549398895130").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1549398895130"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const n=new URL(e.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&t.has(n.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1549398895130").then(async t=>{try{const n=await fetch(e.request);return t.put(e.request,n.clone()),n}catch(n){const c=await t.match(e.request);if(c)return c;throw n}}))))})}();

{"version":3,"file":"chunk.265e0e6e.js","sources":["../../../src/routes/blog/[slug].html"],"sourcesContent":["<svelte:head>\n\t<title>{post.title}</title>\n</svelte:head>\n\n<h1>{post.title}</h1>\n\n<div class='content'>\n\t{@html post.html}\n</div>\n\n<style>\n\t/*\n\t\tBy default, CSS is locally scoped to the component,\n\t\tand any unused styles are dead-code-eliminated.\n\t\tIn this page, Svelte can't know which elements are\n\t\tgoing to appear inside the {{{post.html}}} block,\n\t\tso we have to use the :global(...) modifier to target\n\t\tall elements inside .content\n\t*/\n\t.content :global(h2) {\n\t\tfont-size: 1.4em;\n\t\tfont-weight: 500;\n\t}\n\n\t.content :global(pre) {\n\t\tbackground-color: #f9f9f9;\n\t\tbox-shadow: inset 1px 1px 5px rgba(0,0,0,0.05);\n\t\tpadding: 0.5em;\n\t\tborder-radius: 2px;\n\t\toverflow-x: auto;\n\t}\n\n\t.content :global(pre) :global(code) {\n\t\tbackground-color: transparent;\n\t\tpadding: 0;\n\t}\n\n\t.content :global(ul) {\n\t\tline-height: 1.5;\n\t}\n\n\t.content :global(li) {\n\t\tmargin: 0 0 0.5em 0;\n\t}\n</style>\n\n<script>\n\texport default {\n\t\tasync preload({ params, query }) {\n\t\t\t// the `slug` parameter is available because\n\t\t\t// this file is called [slug].html\n\t\t\tconst res = await this.fetch(`blog/${params.slug}.json`);\n\t\t\tconst data = await res.json();\n\n\t\t\tif (res.status === 200) {\n\t\t\t\treturn { post: data };\n\t\t\t} else {\n\t\t\t\tthis.error(res.status, data.message);\n\t\t\t}\n\t\t}\n\t};\n</script>"],"names":["post","title","html","params","query","res","this","fetch","slug","data","json","status","error","message"],"mappings":"gPAIKA,KAAKC,UAGFD,KAAKE,wBANJF,KAAKC,oVAALD,KAAKC,4CAGTD,KAAKC,gCAGFD,KAAKE,8NAyCGC,OAAEA,EAAMC,MAAEA,IAGvB,MAAMC,QAAYC,KAAKC,cAAcJ,EAAOK,aACtCC,QAAaJ,EAAIK,OAEvB,GAAmB,MAAfL,EAAIM,OACP,MAAO,CAAEX,KAAMS,GAEfH,KAAKM,MAAMP,EAAIM,OAAQF,EAAKI"}